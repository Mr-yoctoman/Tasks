{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh2840\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
What is the difference between HTTP 1.1  and  HTTP 2\
\
These both are two different versions of the Hypertext Transfer Protocol, each with its own set of improvements over its predecessor. Here are some key differences between HTTP 1.1  and HTTP 2.\
\
1. Multiplexing: \
  A. HTTP 1.1 : Uses a single , serialised connection for each request -  response cycle. Only one request can be sent at a time on a connection.\
 B. HTTP 2 : Introduces multiplexing, allowing multiple requests and responses to be sent in parallel over a single connection. This significantly improves the efficiency of data transfer, reducing latency.\
\
\
2. Header Compression : \
A. HTTP 1.1 : Headers are sent in plain text, and redundant headers must be resent with each request.\
B. HTTP 2 : Utilises header compression, which reduces overhead by compressing repeated header fields. This leads to more efficient use of bandwidth and faster page loads.\
\
3. Binary Protocol : \
A. HTTP 1.1 : Uses a text-based protocol, which is human-readable but can be less efficient for machines to process.\
B. HTTP 2 : Employs a binary protocol, which is more compact and easier for machines to parse. This contributes to faster and more efficient communication between clients and servers.\
\
4. Server Push:\
A. HTTP 1.1 : Clients request resources individually, and the server responds with the requested resources.\
B. HTTP 2 : Introduces server push, allowing the server to proactively send resources to the client before the client requests them. This can improve page load times by reducing the need for multiple round-trip requests.\
\
\
\
\
Write about Objects and its internal representations in Javascript.\
\
An Object is a complex data type that allows us to store and organise data using Key-Value pairs. Objects are one of the fundamental data structures in the language and are used to represent and manipulate real-world entities in code. Objects are dynamic in nature , we can add key-value at any time and also can delete one at any time.\
\
Example of Object representation is \
\
Let car = \{ name : \'93Maruti 800\'94, made : \'93Maruti Suzuki\'94 , engine : \'93880cc\'94 , requireDriver : true , seating : 4 \}\
\
}