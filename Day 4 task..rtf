{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red229\green168\blue255;\red1\green25\blue64;\red255\green255\blue255;
\red253\green136\blue147;\red139\green255\blue255;\red254\green185\blue125;\red174\green208\blue255;\red251\green0\blue7;
\red200\green241\blue153;\red255\green255\blue11;\red255\green236\blue157;\red251\green0\blue255;\red36\green255\blue255;
\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red253\green139\blue9;\red255\green255\blue255;
\red255\green255\blue255;\red229\green168\blue255;\red1\green25\blue64;\red174\green208\blue255;\red254\green185\blue125;
\red253\green136\blue147;\red36\green255\blue255;\red251\green0\blue255;\red200\green241\blue153;\red34\green255\blue6;
\red251\green0\blue7;\red255\green255\blue255;\red255\green236\blue157;}
{\*\expandedcolortbl;;\cssrgb\c92157\c73333\c100000;\cssrgb\c0\c14118\c31765;\cssrgb\c100000\c100000\c100000;
\cssrgb\c100000\c61569\c64314;\cssrgb\c60000\c100000\c100000;\cssrgb\c100000\c77255\c56078;\cssrgb\c73333\c85490\c100000;\cssrgb\c100000\c12195\c0;
\cssrgb\c81961\c94510\c66275;\cssrgb\c100000\c100000\c0;\cssrgb\c100000\c93333\c67843;\cssrgb\c100000\c7248\c100000;\cssrgb\c4983\c100000\c100000;
\cssrgb\c100000\c100000\c99971;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c99985;\cssrgb\c100000\c61456\c0;\cssrgb\c100000\c100000\c99985;
\cssrgb\c100000\c100000\c99971;\cssrgb\c92157\c73333\c100000;\cssrgb\c0\c14118\c31765;\cssrgb\c73333\c85490\c100000;\cssrgb\c100000\c77255\c56078;
\cssrgb\c100000\c61569\c64314;\cssrgb\c4983\c100000\c100000;\cssrgb\c100000\c7248\c100000;\cssrgb\c81961\c94510\c66275;\cssrgb\c0\c100000\c0;
\cssrgb\c100000\c12195\c0;\cssrgb\c100000\c100000\c99970;\cssrgb\c100000\c93333\c67843;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh5340\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. Do the below programs in anonymous function & IIFE\
\
A. Print odd numbers in an array.\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
let\cf4  \cf5 area\cf4  \cf6 =\cf4  (\cf2 function\cf4  (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 0\cf4 ; \cf5 i\cf4  \cf6 <\cf4  \cf7 arr\cf4 .\cf5 length\cf4 ; \cf5 i\cf6 ++\cf4 ) \{\cb1 \
\cb3     \cf2 if\cf4  (\cf7 arr\cf4 [\cf5 i\cf4 ] \cf6 %\cf4  \cf7 2\cf4  \cf6 !==\cf4  \cf7 0\cf4 ) \{\cb1 \
\cb3       \cf5 console\cf8 .log\cf4 (\cf7 arr\cf4 [\cf5 i\cf4 ]);\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3 \})([\cf7 1\cf4 , \cf7 2\cf4 , \cf7 3\cf4 , \cf7 4\cf4 , \cf7 5\cf4 , \cf7 6\cf4 , \cf7 7\cf4 , \cf7 8\cf4 , \cf7 9\cf4 , \cf7 10\cf4 ]);\cb1 \
\
\
\cf2 \cb3 let\cf4  \cf8 findOdd\cf4  \cf6 =\cf4  \cf2 function\cf4  (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 0\cf4 ; \cf5 i\cf4  \cf6 <\cf4  \cf7 arr\cf4 .length; \cf5 i\cf6 ++\cf4 ) \{\cb1 \
\cb3     \cf2 if\cf4  (\cf7 arr\cf4 [\cf5 i\cf4 ] \cf6 %\cf4  \cf7 2\cf4  \cf6 !==\cf4  \cf7 0\cf4 ) \{\cb1 \
\cb3       \cf5 console\cf8 .log\cf4 (\cf7 arr\cf4 [\cf5 i\cf4 ]);\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3 \};\cb1 \
\
\cf2 \cb3 let\cf4  \cf5 result\cf4  \cf6 =\cf4  \cf8 findOdd\cf4 ([\cf7 1\cf4 , \cf7 2\cf4 , \cf7 3\cf4 , \cf7 4\cf4 , \cf7 5\cf4 , \cf7 6\cf4 , \cf7 7\cf4 , \cf7 8\cf4 , \cf7 9\cf4 ]);\cb1 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\cf9 B . Convert all the strings to title caps in a string array.\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 let\cf4  \cf8 converttoCap\cf4  \cf6 =\cf4  \cf2 function\cf4  (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 0\cf4 ; \cf5 i\cf4  \cf6 <\cf4  \cf7 arr\cf4 .length; \cf5 i\cf6 ++\cf4 ) \{\cb1 \
\cb3     \cf7 arr\cf4 [\cf5 i\cf4 ] \cf6 =\cf4  \cf7 arr\cf4 [\cf5 i\cf4 ]\cf8 .toUpperCase\cf4 ();\cb1 \
\cb3   \}\cb1 \
\cb3   \cf2 return\cf4  \cf7 arr\cf4 ;\cb1 \
\cb3 \};\cb1 \
\
\cf2 \cb3 let\cf4  \cf5 result\cf4  \cf6 =\cf4  \cf8 converttoCap\cf4 ([\cf10 "apple"\cf4 , \cf10 "banana"\cf4 , \cf10 "orange"\cf4 ]);\cb1 \
\cf5 \cb3 console\cf8 .log\cf4 (\cf5 result\cf4 );\cb1 \
\
\
\
\cf2 \cb3 let\cf4  \cf5 convertCap\cf4  \cf6 =\cf4  (\cf2 function\cf4  (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 0\cf4 ; \cf5 i\cf4  \cf6 <\cf4  \cf7 arr\cf4 .\cf5 length\cf4 ; \cf5 i\cf6 ++\cf4 ) \{\cb1 \
\cb3     \cf7 arr\cf4 [\cf5 i\cf4 ] \cf6 =\cf4  \cf7 arr\cf4 [\cf5 i\cf4 ]\cf8 .toUpperCase\cf4 ();\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 console\cf8 .log\cf4 (\cf7 arr\cf4 );\cb1 \
\cb3 \})([\cf10 "apple"\cf4 , \cf10 "banana"\cf4 , \cf10 "orange"\cf4 ]);\cb1 \
\
\
\
\
\pard\pardeftab720\partightenfactor0
\cf9 C. Sum of all numbers in an array.\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 let\cf4  \cf5 sumOfArr\cf4  \cf6 =\cf4  (\cf2 function\cf4  (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 let\cf4  \cf5 sum\cf4  \cf6 =\cf4  \cf7 0\cf4 ;\cb1 \
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 0\cf4 ; \cf5 i\cf4  \cf6 <\cf4  \cf7 arr\cf4 .\cf5 length\cf4 ; \cf5 i\cf6 ++\cf4 ) \{\cb1 \
\cb3     \cf5 sum\cf4  \cf6 +=\cf4  \cf7 arr\cf4 [\cf5 i\cf4 ];\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 console\cf8 .log\cf4 (\cf5 sum\cf4 );\cb1 \
\cb3 \})([\cf7 1\cf4 , \cf7 2\cf4 , \cf7 3\cf4 , \cf7 4\cf4 , \cf7 5\cf4 ]);\cb1 \
\pard\pardeftab720\partightenfactor0
\cf9 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 let\cf4  \cf8 sumOfArr\cf4  \cf6 =\cf4  \cf2 function\cf4  (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 let\cf4  \cf5 sum\cf4  \cf6 =\cf4  \cf7 0\cf4 ;\cb1 \
\
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 0\cf4 ; \cf5 i\cf4  \cf6 <\cf4  \cf7 arr\cf4 .length; \cf5 i\cf6 ++\cf4 ) \{\cb1 \
\cb3     \cf5 sum\cf4  \cf6 +=\cf4  \cf7 arr\cf4 [\cf5 i\cf4 ];\cb1 \
\cb3   \}\cb1 \
\cb3   \cf2 return\cf4  \cf5 sum\cf4 ;\cb1 \
\cb3 \};\cb1 \
\
\cf2 \cb3 let\cf4  \cf5 result\cf4  \cf6 =\cf4  \cf8 sumOfArr\cf4 ([\cf7 1\cf4 , \cf7 2\cf4 , \cf7 3\cf4 , \cf7 4\cf4 , \cf7 5\cf4 ]);\cb1 \
\cf5 \cb3 console\cf8 .log\cf4 (\cf5 result\cf4 );\cb1 \
\pard\pardeftab720\partightenfactor0
\cf9 \
\
\
\
D. Return all the prime numbers in an array.\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 function\cf4  \cf8 isPrime\cf4 (\cf7 primeNumber\cf4 ) \{\cb1 \
\cb3   \cf2 let\cf4  \cf5 count\cf4  \cf6 =\cf4  \cf7 0\cf4 ;\cb1 \
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 1\cf4 ; \cf5 i\cf4  \cf6 <=\cf4  \cf7 primeNumber\cf4 ; \cf5 i\cf6 ++\cf4 ) \{\cb1 \
\cb3     \cf2 if\cf4  (\cf7 primeNumber\cf4  \cf6 %\cf4  \cf5 i\cf4  \cf6 ===\cf4  \cf7 0\cf4 ) \{\cb1 \
\cb3       \cf5 count\cf6 ++\cf4 ;\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf2 if\cf4  (\cf5 count\cf4  \cf6 ===\cf4  \cf7 2\cf4 ) \cf2 return\cf4  \cf7 true\cf4 ;\cb1 \
\cb3   \cf2 else\cf4  \cf2 return\cf4  \cf7 false\cf4 ;\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 function\cf4  \cf8 range\cf4 (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 let\cf4  \cf5 primeNumbers\cf4  \cf6 =\cf4  [];\cb1 \
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 0\cf4 ; \cf5 i\cf4  \cf6 <\cf4  \cf7 arr\cf4 .length; \cf5 i\cf6 ++\cf4 ) \{\cb1 \
\cb3     \cf2 if\cf4  (\cf8 isPrime\cf4 (\cf5 i\cf4 ) \cf6 ===\cf4  \cf7 true\cf4 ) \{\cb1 \
\cb3       \cf5 primeNumbers\cf8 .push\cf4 (\cf5 i\cf4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3   \cf2 return\cf4  \cf5 primeNumbers\cf4 ;\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 let\cf4  \cf5 unknownList\cf4  \cf6 =\cf4  \cf8 range\cf4 ([\cf7 1\cf4 , \cf7 2\cf4 , \cf7 3\cf4 , \cf7 4\cf4 , \cf7 5\cf4 , \cf7 6\cf4 , \cf7 7\cf4 , \cf7 8\cf4 , \cf7 9\cf4 , \cf7 10\cf4 , \cf7 11\cf4 , \cf7 12\cf4 , \cf7 13\cf4 , \cf7 14\cf4 , \cf7 15\cf4 ]);\cb1 \
\cf5 \cb3 console\cf8 .log\cf4 (\cf5 unknownList\cf4 );\
\
\
\pard\pardeftab720\partightenfactor0
\cf11 \cb1 E. Return all the palindromes in an array.\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 let\cf4  \cf8 palindrome\cf4  \cf6 =\cf4  \cf2 function\cf4  (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 let\cf4  \cf5 palindromes\cf4  \cf6 =\cf4  [];\cb1 \
\
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 0\cf4 ; \cf5 i\cf4  \cf6 <\cf4  \cf7 arr\cf4 .length; \cf5 i\cf6 ++\cf4 ) \{\cb1 \
\cb3     \cf2 let\cf4  \cf5 num\cf4  \cf6 =\cf4  \cf7 arr\cf4 [\cf5 i\cf4 ];\cb1 \
\cb3     \cf2 let\cf4  \cf5 str\cf4  \cf6 =\cf4  \cf12 String\cf4 (\cf5 num\cf4 );\cb1 \
\cb3     \cf2 let\cf4  \cf5 reversedStr\cf4  \cf6 =\cf4  \cf5 str\cf8 .split\cf4 (\cf10 ""\cf4 )\cf8 .reverse\cf4 ()\cf8 .join\cf4 (\cf10 ""\cf4 );\cb1 \
\
\cb3     \cf2 if\cf4  (\cf5 str\cf4  \cf6 ===\cf4  \cf5 reversedStr\cf4 ) \{\cb1 \
\cb3       \cf5 palindromes\cf8 .push\cf4 (\cf5 num\cf4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf2 return\cf4  \cf5 palindromes\cf4 ;\cb1 \
\cb3 \};\cb1 \
\
\cf2 \cb3 let\cf4  \cf5 result\cf4  \cf6 =\cf4  \cf8 palindrome\cf4 ([\cf7 121\cf4 , \cf7 123\cf4 , \cf7 434\cf4 , \cf7 1221\cf4 ]);\cb1 \
\cf5 \cb3 console\cf8 .log\cf4 (\cf5 result\cf4 );\cb1 \
\
\
\
\
\cf2 \cb3 let\cf4  \cf5 palindrome\cf4  \cf6 =\cf4  (\cf2 function\cf4  (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 let\cf4  \cf5 newarr\cf4  \cf6 =\cf4  [];\cb1 \
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 0\cf4 ; \cf5 i\cf4  \cf6 <\cf4  \cf7 arr\cf4 .\cf5 length\cf4 ; \cf5 i\cf6 ++\cf4 ) \{\cb1 \
\cb3     \cf2 let\cf4  \cf5 num\cf4  \cf6 =\cf4  \cf7 arr\cf4 [\cf5 i\cf4 ];\cb1 \
\cb3     \cf2 let\cf4  \cf5 str\cf4  \cf6 =\cf4  \cf12 String\cf4 (\cf5 num\cf4 );\cb1 \
\cb3     \cf2 let\cf4  \cf5 reversedStr\cf4  \cf6 =\cf4  \cf5 str\cf8 .split\cf4 (\cf10 ""\cf4 )\cf8 .reverse\cf4 ()\cf8 .join\cf4 (\cf10 ""\cf4 );\cb1 \
\
\cb3     \cf2 if\cf4  (\cf5 reversedStr\cf4  \cf6 ===\cf4  \cf5 str\cf4 ) \{\cb1 \
\cb3       \cf5 newarr\cf8 .push\cf4 (\cf5 num\cf4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 console\cf8 .log\cf4 (\cf5 newarr\cf4 );\cb1 \
\cb3 \})([\cf7 121\cf4 , \cf7 123\cf4 , \cf7 434\cf4 ]);\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf13 F. Return median of two sorted arrays of the same size.\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 let\cf4  \cf8 median\cf4  \cf6 =\cf4  \cf2 function\cf4  (\cf7 arr1\cf4 , \cf7 arr2\cf4 ) \{\cb1 \
\cb3   \cf2 let\cf4  \cf5 arr3\cf4  \cf6 =\cf4  \cf7 arr1\cf8 .concat\cf4 (\cf7 arr2\cf4 );\cb1 \
\cb3   \cf2 let\cf4  \cf5 index\cf4  \cf6 =\cf4  \cf7 0\cf4 ;\cb1 \
\cb3   \cf2 let\cf4  \cf5 medianNum\cf4  \cf6 =\cf4  \cf7 0\cf4 ;\cb1 \
\
\cb3   \cf2 if\cf4  (\cf5 arr3\cf4 .length \cf6 %\cf4  \cf7 2\cf4  \cf6 ===\cf4  \cf7 0\cf4 ) \{\cb1 \
\cb3     \cf5 index\cf4  \cf6 =\cf4  \cf5 Math\cf8 .round\cf4 ((\cf5 arr3\cf4 .length \cf6 -\cf4  \cf7 1\cf4 ) \cf6 /\cf4  \cf7 2\cf4 ) \cf6 -\cf4  \cf7 1\cf4 ;\cb1 \
\cb3     \cf5 console\cf8 .log\cf4 (\cf5 index\cf4 );\cb1 \
\cb3     \cf5 medianNum\cf4  \cf6 =\cf4  (\cf5 arr3\cf4 [\cf5 index\cf4 ] \cf6 +\cf4  \cf5 arr3\cf4 [\cf5 index\cf4  \cf6 +\cf4  \cf7 1\cf4 ]) \cf6 /\cf4  \cf7 2\cf4 ;\cb1 \
\cb3     \cf2 return\cf4  \cf5 medianNum\cf4 ;\cb1 \
\cb3   \} \cf2 else\cf4  \{\cb1 \
\cb3     \cf5 index\cf4  \cf6 =\cf4  (\cf5 arr3\cf4 .length \cf6 -\cf4  \cf7 1\cf4 ) \cf6 /\cf4  \cf7 2\cf4 ;\cb1 \
\cb3     \cf5 medianNum\cf4  \cf6 =\cf4  \cf5 arr3\cf4 [\cf5 index\cf4 ];\cb1 \
\cb3     \cf2 return\cf4  \cf5 medianNum\cf4 ;\cb1 \
\cb3   \}\cb1 \
\cb3 \};\cb1 \
\
\cf5 \cb3 console\cf8 .log\cf4 (\cf8 median\cf4 ([\cf7 1\cf4 , \cf7 2\cf4 , \cf7 3\cf4 , \cf7 4\cf4 ], [\cf7 5\cf4 , \cf7 6\cf4 , \cf7 7\cf4 , \cf7 8\cf4 ]));\
\
\
\
\
\
\cf2 let\cf4  \cf5 median\cf4  \cf6 =\cf4  (\cf2 function\cf4  (\cf7 arr1\cf4 , \cf7 arr2\cf4 ) \{\cb1 \
\cb3   \cf2 let\cf4  \cf5 arr3\cf4  \cf6 =\cf4  \cf7 arr1\cf8 .concat\cf4 (\cf7 arr2\cf4 );\cb1 \
\cb3   \cf2 let\cf4  \cf5 index\cf4  \cf6 =\cf4  \cf7 0\cf4 ;\cb1 \
\cb3   \cf2 let\cf4  \cf5 medianNum\cf4  \cf6 =\cf4  \cf7 0\cf4 ;\cb1 \
\
\cb3   \cf2 if\cf4  (\cf5 arr3\cf4 .\cf5 length\cf4  \cf6 %\cf4  \cf7 2\cf4  \cf6 ===\cf4  \cf7 0\cf4 ) \{\cb1 \
\cb3     \cf5 index\cf4  \cf6 =\cf4  \cf5 Math\cf8 .round\cf4 ((\cf5 arr3\cf4 .\cf5 length\cf4  \cf6 -\cf4  \cf7 1\cf4 ) \cf6 /\cf4  \cf7 2\cf4 ) \cf6 -\cf4  \cf7 1\cf4 ;\cb1 \
\
\cb3     \cf5 medianNum\cf4  \cf6 =\cf4  (\cf5 arr3\cf4 [\cf5 index\cf4 ] \cf6 +\cf4  \cf5 arr3\cf4 [\cf5 index\cf4  \cf6 +\cf4  \cf7 1\cf4 ]) \cf6 /\cf4  \cf7 2\cf4 ;\cb1 \
\cb3     \cf5 console\cf8 .log\cf4 (\cf5 medianNum\cf4 );\cb1 \
\cb3   \} \cf2 else\cf4  \{\cb1 \
\cb3     \cf5 index\cf4  \cf6 =\cf4  (\cf5 arr3\cf4 .\cf5 length\cf4  \cf6 -\cf4  \cf7 1\cf4 ) \cf6 /\cf4  \cf7 2\cf4 ;\cb1 \
\cb3     \cf5 medianNum\cf4  \cf6 =\cf4  \cf5 arr3\cf4 [\cf5 index\cf4 ];\cb1 \
\cb3     \cf5 console\cf8 .log\cf4 (\cf5 medianNum\cf4 );\cb1 \
\cb3   \}\cb1 \
\cb3 \})([\cf7 1\cf4 , \cf7 2\cf4 , \cf7 3\cf4 , \cf7 4\cf4 ], [\cf7 5\cf4 , \cf7 6\cf4 , \cf7 7\cf4 , \cf7 8\cf4 ]);\cb1 \
\
\
\
\
\
\cf14 G . Remove duplicates from an array.\
\
\
\cf2 \cb3 let\cf4  \cf8 removeDuplicate\cf4  \cf6 =\cf4  \cf2 function\cf4  (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 arr\cf4 .length \cf6 -\cf4  \cf7 1\cf4 ; \cf5 i\cf4  \cf6 >=\cf4  \cf7 0\cf4 ; \cf5 i\cf6 --\cf4 ) \{\cb1 \
\cb3     \cf2 for\cf4  (\cf2 let\cf4  \cf5 j\cf4  \cf6 =\cf4  \cf5 i\cf4  \cf6 -\cf4  \cf7 1\cf4 ; \cf5 j\cf4  \cf6 >=\cf4  \cf7 0\cf4 ; \cf5 j\cf6 --\cf4 ) \{\cb1 \
\cb3       \cf2 if\cf4  (\cf7 arr\cf4 [\cf5 i\cf4 ] \cf6 ===\cf4  \cf7 arr\cf4 [\cf5 j\cf4 ]) \{\cb1 \
\cb3         \cf7 arr\cf8 .splice\cf4 (\cf5 i\cf4 , \cf7 1\cf4 );\cb1 \
\cb3         \cf2 break\cf4 ;\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3   \cf2 return\cf4  \cf7 arr\cf4 ;\cb1 \
\cb3 \};\cb1 \
\
\cf5 \cb3 console\cf8 .log\cf4 (\cf8 removeDuplicate\cf4 ([\cf7 1\cf4 , \cf7 1\cf4 , \cf7 2\cf4 , \cf7 2\cf4 , \cf7 3\cf4 , \cf7 3\cf4 , \cf7 4\cf4 , \cf7 4\cf4 , \cf7 5\cf4 ]));\cb1 \
\cf16 \
\
\
\
\
\cf2 \cb3 let\cf4  \cf5 removeDuplicate\cf4  \cf6 =\cf4  (\cf2 function\cf4  (\cf7 arr\cf4 ) \{\cb1 \
\cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  \cf6 =\cf4  \cf7 arr\cf4 .\cf5 length\cf4  \cf6 -\cf4  \cf7 1\cf4 ; \cf5 i\cf4  \cf6 >=\cf4  \cf7 0\cf4 ; \cf5 i\cf6 --\cf4 ) \{\cb1 \
\cb3     \cf2 for\cf4  (\cf2 let\cf4  \cf5 j\cf4  \cf6 =\cf4  \cf5 i\cf4  \cf6 -\cf4  \cf7 1\cf4 ; \cf5 j\cf4  \cf6 >=\cf4  \cf7 0\cf4 ; \cf5 j\cf6 --\cf4 ) \{\cb1 \
\cb3       \cf2 if\cf4  (\cf7 arr\cf4 [\cf5 i\cf4 ] \cf6 ===\cf4  \cf7 arr\cf4 [\cf5 j\cf4 ]) \{\cb1 \
\cb3         \cf7 arr\cf8 .splice\cf4 (\cf5 i\cf4 , \cf7 1\cf4 );\cb1 \
\cb3         \cf2 break\cf4 ;\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3   \cf5 console\cf8 .log\cf4 (\cf7 arr\cf4 );\cb1 \
\cb3 \})([\cf7 1\cf4 , \cf7 1\cf4 , \cf7 2\cf4 , \cf7 2\cf4 , \cf7 3\cf4 , \cf7 3\cf4 , \cf7 4\cf4 , \cf7 4\cf4 , \cf7 5\cf4 ]);\
\
\
\
\
\
\cf18 \cb19 H. Rotate an array by K times.\
\
\pard\pardeftab720\partightenfactor0
\cf21 \cb22 \outl0\strokewidth0 \strokec21 let\cf4 \strokec4  \cf23 \strokec23 rotateArr\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf21 \strokec21 function\cf4 \strokec4  (\cf24 \strokec24 arr\cf4 \strokec4 ) \{\cb1 \
\cb22   \cf21 \strokec21 for\cf4 \strokec4  (\cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ; \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 <\cf4 \strokec4  \cf24 \strokec24 4\cf4 \strokec4 ; \cf25 \strokec25 i\cf6 \strokec6 ++\cf4 \strokec4 ) \{\cb1 \
\cb22     \cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 temp\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 [\cf24 \strokec24 0\cf4 \strokec4 ];\cb1 \
\cb22     \cf24 \strokec24 arr\cf23 \strokec23 .shift\cf4 \strokec4 ();\cb1 \
\cb22     \cf24 \strokec24 arr\cf23 \strokec23 .push\cf4 \strokec4 (\cf25 \strokec25 temp\cf4 \strokec4 );\cb1 \
\cb22   \}\cb1 \
\cb22   \cf21 \strokec21 return\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 ;\cb1 \
\cb22 \};\cb1 \
\
\cf25 \cb22 \strokec25 console\cf23 \strokec23 .log\cf4 \strokec4 (\cf23 \strokec23 rotateArr\cf4 \strokec4 ([\cf24 \strokec24 1\cf4 \strokec4 , \cf24 \strokec24 2\cf4 \strokec4 , \cf24 \strokec24 3\cf4 \strokec4 , \cf24 \strokec24 4\cf4 \strokec4 , \cf24 \strokec24 5\cf4 \strokec4 , \cf24 \strokec24 6\cf4 \strokec4 , \cf24 \strokec24 7\cf4 \strokec4 , \cf24 \strokec24 8\cf4 \strokec4 , \cf24 \strokec24 9\cf4 \strokec4 ]));\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \outl0\strokewidth0 \
\
\
\pard\pardeftab720\partightenfactor0
\cf21 \cb22 \outl0\strokewidth0 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 rotateArr\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  (\cf21 \strokec21 function\cf4 \strokec4  (\cf24 \strokec24 arr\cf4 \strokec4 ) \{\cb1 \
\cb22   \cf21 \strokec21 for\cf4 \strokec4  (\cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ; \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 <\cf4 \strokec4  \cf24 \strokec24 4\cf4 \strokec4 ; \cf25 \strokec25 i\cf6 \strokec6 ++\cf4 \strokec4 ) \{\cb1 \
\cb22     \cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 temp\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 [\cf24 \strokec24 0\cf4 \strokec4 ];\cb1 \
\cb22     \cf24 \strokec24 arr\cf23 \strokec23 .shift\cf4 \strokec4 ();\cb1 \
\cb22     \cf24 \strokec24 arr\cf23 \strokec23 .push\cf4 \strokec4 (\cf25 \strokec25 temp\cf4 \strokec4 );\cb1 \
\cb22   \}\cb1 \
\cb22   \cf25 \strokec25 console\cf23 \strokec23 .log\cf4 \strokec4 (\cf24 \strokec24 arr\cf4 \strokec4 );\cb1 \
\cb22 \})([\cf24 \strokec24 1\cf4 \strokec4 , \cf24 \strokec24 2\cf4 \strokec4 , \cf24 \strokec24 3\cf4 \strokec4 , \cf24 \strokec24 4\cf4 \strokec4 , \cf24 \strokec24 5\cf4 \strokec4 , \cf24 \strokec24 6\cf4 \strokec4 , \cf24 \strokec24 7\cf4 \strokec4 , \cf24 \strokec24 8\cf4 \strokec4 , \cf24 \strokec24 9\cf4 \strokec4 ]);\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \outl0\strokewidth0 \
\
\
\
\
\cf26 				PART 2\
\
A.  Print odd numbers in an array.\
\
\pard\pardeftab720\partightenfactor0
\cf21 \cb22 \outl0\strokewidth0 \strokec21 let\cf4 \strokec4  \cf23 \strokec23 findOddArr\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  (\cf24 \strokec24 arr\cf4 \strokec4 ) \cf21 \strokec21 =>\cf4 \strokec4  \{\cb1 \
\cb22   \cf21 \strokec21 for\cf4 \strokec4  (\cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ; \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 <\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 .length; \cf25 \strokec25 i\cf6 \strokec6 ++\cf4 \strokec4 ) \{\cb1 \
\cb22     \cf21 \strokec21 if\cf4 \strokec4  (\cf24 \strokec24 arr\cf4 \strokec4 [\cf25 \strokec25 i\cf4 \strokec4 ] \cf6 \strokec6 %\cf4 \strokec4  \cf24 \strokec24 2\cf4 \strokec4  \cf6 \strokec6 !==\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ) \{\cb1 \
\cb22       \cf25 \strokec25 console\cf23 \strokec23 .log\cf4 \strokec4 (\cf24 \strokec24 arr\cf4 \strokec4 [\cf25 \strokec25 i\cf4 \strokec4 ]);\cb1 \
\cb22     \}\cb1 \
\cb22   \}\cb1 \
\cb22 \};\cb1 \
\
\cf23 \cb22 \strokec23 findOddArr\cf4 \strokec4 ([\cf24 \strokec24 1\cf4 \strokec4 , \cf24 \strokec24 2\cf4 \strokec4 , \cf24 \strokec24 3\cf4 \strokec4 , \cf24 \strokec24 4\cf4 \strokec4 , \cf24 \strokec24 5\cf4 \strokec4 , \cf24 \strokec24 6\cf4 \strokec4 , \cf24 \strokec24 7\cf4 \strokec4 , \cf24 \strokec24 8\cf4 \strokec4 , \cf24 \strokec24 9\cf4 \strokec4 ]);\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \outl0\strokewidth0 \
\
\
\
\cf27 B. Convert all the strings to title caps in a string array.\
\
\
\pard\pardeftab720\partightenfactor0
\cf4 \outl0\strokewidth0 \strokec4 \
\cf21 \cb22 \strokec21 let\cf4 \strokec4  \cf23 \strokec23 toCaps\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  (\cf24 \strokec24 arr\cf4 \strokec4 ) \cf21 \strokec21 =>\cf4 \strokec4  \{\cb1 \
\cb22   \cf21 \strokec21 for\cf4 \strokec4  (\cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ; \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 <\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 .length; \cf25 \strokec25 i\cf6 \strokec6 ++\cf4 \strokec4 ) \{\cb1 \
\cb22     \cf24 \strokec24 arr\cf4 \strokec4 [\cf25 \strokec25 i\cf4 \strokec4 ] \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 [\cf25 \strokec25 i\cf4 \strokec4 ]\cf23 \strokec23 .toUpperCase\cf4 \strokec4 ();\cb1 \
\cb22   \}\cb1 \
\cb22   \cf25 \strokec25 console\cf23 \strokec23 .log\cf4 \strokec4 (\cf24 \strokec24 arr\cf4 \strokec4 );\cb1 \
\cb22 \};\cb1 \
\
\cf23 \cb22 \strokec23 toCaps\cf4 \strokec4 ([\cf28 \cb22 \strokec28 "ashu"\cf4 \cb22 \strokec4 , \cf28 \cb22 \strokec28 "chintu"\cf4 \cb22 \strokec4 ]);\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \outl0\strokewidth0 \
\
\
\cf11 C. Sum of all numbers in an array.\
\
\pard\pardeftab720\partightenfactor0
\cf21 \cb22 \outl0\strokewidth0 \strokec21 let\cf4 \strokec4  \cf23 \strokec23 sumOfArr\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  (\cf24 \strokec24 arr\cf4 \strokec4 ) \cf21 \strokec21 =>\cf4 \strokec4  \{\cb1 \
\cb22   \cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 sum\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ;\cb1 \
\cb22   \cf21 \strokec21 for\cf4 \strokec4  (\cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ; \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 <\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 .length; \cf25 \strokec25 i\cf6 \strokec6 ++\cf4 \strokec4 ) \{\cb1 \
\cb22     \cf25 \strokec25 sum\cf4 \strokec4  \cf6 \strokec6 +=\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 [\cf25 \strokec25 i\cf4 \strokec4 ];\cb1 \
\cb22   \}\cb1 \
\cb22   \cf25 \strokec25 console\cf23 \strokec23 .log\cf4 \strokec4 (\cf25 \strokec25 sum\cf4 \strokec4 );\cb1 \
\cb22 \};\cb1 \
\
\cf23 \cb22 \strokec23 sumOfArr\cf4 \strokec4 ([\cf24 \strokec24 1\cf4 \strokec4 , \cf24 \strokec24 2\cf4 \strokec4 , \cf24 \strokec24 3\cf4 \strokec4 , \cf24 \strokec24 4\cf4 \strokec4 , \cf24 \strokec24 5\cf4 \strokec4 ]);\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \outl0\strokewidth0 \
\
\
\cf29 D. Return all prime numbers in an array.\
\
\pard\pardeftab720\partightenfactor0
\cf4 \outl0\strokewidth0 \strokec4 \
\cf21 \cb22 \strokec21 let\cf4 \strokec4  \cf23 \strokec23 findPrime\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  (\cf24 \strokec24 arr\cf4 \strokec4 ) \cf21 \strokec21 =>\cf4 \strokec4  \{\cb1 \
\cb22   \cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 primeArr\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  [];\cb1 \
\cb22   \cf21 \strokec21 for\cf4 \strokec4  (\cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ; \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 <\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 .length; \cf25 \strokec25 i\cf6 \strokec6 ++\cf4 \strokec4 ) \{\cb1 \
\cb22     \cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 count\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ;\cb1 \
\cb22     \cf21 \strokec21 for\cf4 \strokec4  (\cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 j\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 1\cf4 \strokec4 ; \cf25 \strokec25 j\cf4 \strokec4  \cf6 \strokec6 <=\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 [\cf25 \strokec25 i\cf4 \strokec4 ]; \cf25 \strokec25 j\cf6 \strokec6 ++\cf4 \strokec4 ) \{\cb1 \
\cb22       \cf21 \strokec21 if\cf4 \strokec4  (\cf24 \strokec24 arr\cf4 \strokec4 [\cf25 \strokec25 i\cf4 \strokec4 ] \cf6 \strokec6 %\cf4 \strokec4  \cf25 \strokec25 j\cf4 \strokec4  \cf6 \strokec6 ===\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ) \{\cb1 \
\cb22         \cf25 \strokec25 count\cf6 \strokec6 ++\cf4 \strokec4 ;\cb1 \
\cb22       \}\cb1 \
\cb22     \}\cb1 \
\cb22     \cf21 \strokec21 if\cf4 \strokec4  (\cf25 \strokec25 count\cf4 \strokec4  \cf6 \strokec6 ===\cf4 \strokec4  \cf24 \strokec24 2\cf4 \strokec4 ) \{\cb1 \
\cb22       \cf25 \strokec25 primeArr\cf23 \strokec23 .push\cf4 \strokec4 (\cf24 \strokec24 arr\cf4 \strokec4 [\cf25 \strokec25 i\cf4 \strokec4 ]);\cb1 \
\cb22     \}\cb1 \
\cb22   \}\cb1 \
\cb22   \cf25 \strokec25 console\cf23 \strokec23 .log\cf4 \strokec4 (\cf25 \strokec25 primeArr\cf4 \strokec4 );\cb1 \
\cb22 \};\cb1 \
\
\cf23 \cb22 \strokec23 findPrime\cf4 \strokec4 ([\cf24 \strokec24 1\cf4 \strokec4 , \cf24 \strokec24 2\cf4 \strokec4 , \cf24 \strokec24 3\cf4 \strokec4 , \cf24 \strokec24 4\cf4 \strokec4 , \cf24 \strokec24 5\cf4 \strokec4 , \cf24 \strokec24 6\cf4 \strokec4 , \cf24 \strokec24 7\cf4 \strokec4 , \cf24 \strokec24 8\cf4 \strokec4 , \cf24 \strokec24 9\cf4 \strokec4 ]);\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \outl0\strokewidth0 \
\cf16 \
\
\
\
\cf30 E . Return al the palindromes in an array.\
\
\pard\pardeftab720\partightenfactor0
\cf21 \cb22 \outl0\strokewidth0 \strokec21 let\cf4 \strokec4  \cf23 \strokec23 findPalindrome\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  (\cf24 \strokec24 arr\cf4 \strokec4 ) \cf21 \strokec21 =>\cf4 \strokec4  \{\cb1 \
\cb22   \cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 palindromeArr\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  [];\cb1 \
\cb22   \cf21 \strokec21 for\cf4 \strokec4  (\cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ; \cf25 \strokec25 i\cf4 \strokec4  \cf6 \strokec6 <\cf4 \strokec4  \cf24 \strokec24 arr\cf4 \strokec4 .length; \cf25 \strokec25 i\cf6 \strokec6 ++\cf4 \strokec4 ) \{\cb1 \
\cb22     \cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 str\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ;\cb1 \
\cb22     \cf21 \strokec21 let\cf4 \strokec4  \cf25 \strokec25 newElement\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf24 \strokec24 0\cf4 \strokec4 ;\cb1 \
\cb22     \cf25 \strokec25 str\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf32 \cb22 \strokec32 String\cf4 \cb22 \strokec4 (\cf24 \strokec24 arr\cf4 \strokec4 [\cf25 \strokec25 i\cf4 \strokec4 ]);\cb1 \
\cb22     \cf25 \strokec25 newElement\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf25 \strokec25 str\cf23 \strokec23 .split\cf4 \strokec4 (\cf28 \cb22 \strokec28 ""\cf4 \cb22 \strokec4 )\cf23 \strokec23 .reverse\cf4 \strokec4 ()\cf23 \strokec23 .join\cf4 \strokec4 (\cf28 \cb22 \strokec28 ""\cf4 \cb22 \strokec4 );\cb1 \
\cb22     \cf21 \strokec21 if\cf4 \strokec4  (\cf25 \strokec25 str\cf4 \strokec4  \cf6 \strokec6 ===\cf4 \strokec4  \cf25 \strokec25 newElement\cf4 \strokec4 ) \{\cb1 \
\cb22       \cf25 \strokec25 palindromeArr\cf23 \strokec23 .push\cf4 \strokec4 (\cf24 \strokec24 arr\cf4 \strokec4 [\cf25 \strokec25 i\cf4 \strokec4 ]);\cb1 \
\cb22     \}\cb1 \
\cb22   \}\cb1 \
\cb22   \cf25 \strokec25 console\cf23 \strokec23 .log\cf4 \strokec4 (\cf25 \strokec25 palindromeArr\cf4 \strokec4 );\cb1 \
\cb22 \};\cb1 \
\
\cf23 \cb22 \strokec23 findPalindrome\cf4 \strokec4 ([\cf24 \strokec24 1\cf4 \strokec4 , \cf24 \strokec24 121\cf4 \strokec4 , \cf24 \strokec24 123\cf4 \strokec4 ]);\cb1 \
\pard\pardeftab720\partightenfactor0
\cf16 \outl0\strokewidth0 \
\cf4 \
\
\
\
\
\
\
\
\pard\pardeftab720\partightenfactor0
\cf9 \
}